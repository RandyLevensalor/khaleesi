---
- name: Provision nodes
  foreman:
       foreman_url: "{{ provisioner.foreman_url }}"
       state: present
       foreman_username: "{{ provisioner.username }}"
       foreman_password: "{{ provisioner.password }}"
       node: "{{ item.value.hostname }}"
       wait_for: "{{ distro.config.initial_boot_timeout }}"
  register: new_nodes
  retries: 4
  delay: 60
  with_dict: nodes

- local_action:
    wait_for host={{ item.value.hostname }}
             port=22 delay=10 timeout=1800
  with_dict: nodes

- name: Wait for puppet to complete
  uri: >
    "url={{ provisioner.foreman_url }}hosts/{{ item.value.hostname }}/status"
    method=GET
    user=admin
    password={{ provisioner.password }}
    force_basic_auth=yes
    return_content=yes
    HEADER_Content-Type="application/json"
    HEADER_Accepts="application/json"
  register: webresult
  with_dict: nodes
  until: webresult.content.find('Active') != -1
  retries: 60
  delay: 60

- name: Print host openstack network type (nova/neutron)
  debug: var=provisioner.network.type

- debug: var=nodes_created
  when: job.verbosity <= verbosity.debug

- debug: var=hostvars
  when: job.verbosity <= verbosity.debug


